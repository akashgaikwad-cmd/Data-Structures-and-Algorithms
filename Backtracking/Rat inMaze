

// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    
   
   public static void solve(int i,int j,int n,int a[][],int visited[][],String move,ArrayList<String> ans){
       if(i==n-1 && j==n-1){
           ans.add(move);
           return;
       }
       if(i+1<n && visited[i+1][j]==0 && a[i+1][j]==1){ //down
           visited[i][j]=1;
           solve(i+1,j,n,a,visited,move+'D',ans);
           visited[i][j]=0;
       }
       
       if(i-1>=0 && visited[i-1][j]==0 && a[i-1][j]==1){ //up
           visited[i][j]=1;
           solve(i-1,j,n,a,visited,move+'U',ans);
           visited[i][j]=0;
       }
       
       if(j-1>=0 && visited[i][j-1]==0 && a[i][j-1]==1){ //LEFT
           visited[i][j]=1;
           solve(i,j-1,n,a,visited,move+'L',ans);
           visited[i][j]=0;
       }
       
       if(j+1<n && visited[i][j+1]==0 && a[i][j+1]==1){ //Right
           visited[i][j]=1;
           solve(i,j+1,n,a,visited,move+'R',ans);
           visited[i][j]=0;
       }
   }
    public static ArrayList<String> findPath(int[][] m, int n) {
       int visited[][]=new int[n][n];
       for(int i=0;i<n;i++){
           for(int j=0;j<n;j++){
               visited[i][j]=0;
           }
       }
       ArrayList<String> ans=new ArrayList<>();
       if(m[0][0]==1){
           solve(0,0,n,m,visited,"",ans);
       }
       return ans;
    }
}

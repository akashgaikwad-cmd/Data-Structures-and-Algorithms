

class solve {
    
    public static boolean issafe(int c,boolean graph[][],int color[],int v){
        for(int i=0;i<graph.length;i++){
            if(graph[v][i] && color[i]==c){
                return false;
            }
        }
        return true;
    }
    public static boolean graphColoringUtil(boolean[][] graph,int m, int color[],int v,int n){
       if(v==n){
           return true;
       }
       for(int c=1;c<=m;c++){
           if(issafe(c,graph,color,v)){
               color[v]=c;
               if(graphColoringUtil(graph, m, color, v+1, n)){
                   return true;
               }
               color[v]=0;
               
           }
       }
       return false;
    }
    // Main function to solve the M-Coloring problem
    public boolean graphColoring(boolean[][] graph, int m, int n) {
        // Initialize all vertices with no color (0)
        int[] color = new int[n];
        return graphColoringUtil(graph, m, color, 0, n);
    }
}

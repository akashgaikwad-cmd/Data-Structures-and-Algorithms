class Solution {
    
    public static void fun(int index,String s,List<List<String>> ans,ArrayList<String> ds){
        if(index==s.length()){
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i=index;i<s.length();i++){
            if(ispalindrome(s,index,i)){
                ds.add(s.substring(index,i+1));
                fun(i+1,s,ans,ds);
                ds.remove(ds.size()-1);
            }
        }
    }
    public static boolean ispalindrome(String s,int start,int end){
        while(start<=end && end>=start){
            if(s.charAt(start++)!=s.charAt(end--)){
                return false;
            }
        }
        return true;
    }
    public List<List<String>> partition(String s) {
      List<List<String>> ans=new ArrayList<>();
      ArrayList<String> ds=new ArrayList<>();
      fun(0,s,ans,ds);
      return ans;
    }
}
